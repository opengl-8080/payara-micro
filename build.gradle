buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.com.github.opengl-8080:annotation-processing-eclipse-gradle-plugin:1.0.0"
  }
}

apply plugin: 'eclipse-wtp'
apply plugin: 'war'
apply plugin: "com.github.opengl-BOBO.annotation-processing-eclipse"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources

ext {
    projectName = 'doma2-javaee'
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.seasar.doma:doma:2.6.0'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'org.flywaydb:flyway-core:3.2.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.4'
    providedCompile 'fish.payara.extras:payara-micro:4.1.1.154'
    testCompile 'junit:junit:4.12', {transitive = false}
    testCompile 'de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1'
    testCompile 'org.assertj:assertj-core:3.2.0'
    testCompile 'org.jmockit:jmockit:1.21'
}

ape {
    processorJarPattern = /doma.*\.jar/
}

war {
    baseName = projectName
}

eclipse {
    project.name = projectName
}

task payara(type: Exec, dependsOn: war) {
    def payaraJar = configurations
                        .providedCompile
                        .find {it.name =~ /payara-micro.*\.jar/}
                        .absolutePath
    def warFile = war.archivePath

    commandLine(
        'java',
        '-Xdebug',
        '-Xrunjdwp:transport=dt_socket,server=y,address=18000,suspend=n',
        '-jar', payaraJar, '--deploy', warFile
        )
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}
